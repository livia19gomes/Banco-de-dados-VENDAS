/*1-*/
UPDATE DEBITOS 
SET SITUACAO_DEBITO = 'PENDENTE'
WHERE DATAVENCIMENTO < CURRENT_DATE 
AND SITUACAO_DEBITO NOT IN ('NEGOCIADO', 'PAGO')

/*2-*/
UPDATE DEBITOS 
SET SITUACAO_DEBITO = 'PENDENTE'
WHERE DATAVENCIMENTO < CURRENT_DATE AND SITUACAO_DEBITO <> 'PAGO'

/*3-*/
UPDATE DEBITOS 
SET DATAVENCIMENTO = DATEADD(YEAR, -5, DATAVENCIMENTO)
WHERE SITUACAO_DEBITO = 'NEGOCIADO'

/*4-*/
SELECT p.NOME , p.EMAIL , p.TELEFONE 
FROM PESSOA p 

/*5-*/
SELECT * FROM PRODUTO p 
WHERE PRECO_UNITARIO > 100

/*6-*/
SELECT * FROM VENDA v 
WHERE DATA_VENDA = '2022-12-07'

/*7-*/
SELECT p.DATA_NASCIMENTO, p.NOME, 2024 - EXTRACT(YEAR FROM p.DATA_NASCIMENTO) AS IDADE FROM PESSOA p 
WHERE p.ID_PESSOA IN (
	SELECT f.ID_PESSOA 
	FROM FORNECEDOR f 
	WHERE f.ID_FORNECEDOR NOT IN (
		SELECT p2.ID_FORNECEDOR 
		FROM PRODUTO p2
)
)

/*8-*/
SELECT * FROM cliente c 
	WHERE c.ID_CLIENTE IN (SELECT d.ID_CLIENTE FROM debitos d WHERE d.DATAVENCIMENTO < CURRENT_DATE)
	AND c.ID_Cliente IN (SELECT P.ID_CLIENTE FROM pagamento p)

/*9-NÃO FAZER*/

/*10-*/

	
/*11-*/
UPDATE PRODUTO 
SET PRECO_UNITARIO = PRECO_UNITARIO * 1.10
WHERE QUANTIDADE_ESTOQUE < 10

/*12-não fazer*/

/*13*/
UPDATE DEBITOS
SET SITUACAO_DEBITO = 'Pagos'
WHERE SITUACAO_DEBITO = 'Atrasado'
AND EXISTS (
    SELECT 1
    FROM PAGAMENTO p
    WHERE p.id_debito = DEBITOS.id_debito
)


/*14-* não fazer/

/*15*/
SELECT * FROM VENDA
WHERE data_venda >= '2023-12-01' AND data_venda < '2024-02-01'

/*16-*/
SELECT * FROM PRODUTO p 
WHERE QUANTIDADE_ESTOQUE BETWEEN 5 AND 20

/*17-*/
SELECT * FROM PESSOA p 
WHERE p.NOME LIKE 'A%'

/*18-*/
SELECT p.* FROM PRODUTO p
LEFT JOIN VENDA v ON id_produto = p.id_produto
WHERE id_produto IS NULL

/*19-*/
SELECT p.* FROM PRODUTO p
INNER JOIN VENDA v ON id_produto = p.id_produto
INNER JOIN CLIENTE c ON id_cliente = c.id_cliente
WHERE NOME IN ('Carla Souza', 'Larissa Ferreira')

/*20-*/
SELECT * FROM PESSOA P
WHERE P.ID_PESSOA IN (SELECT C.ID_PESSOA FROM CLIENTE C) 
OR P.ID_PESSOA 
IN (SELECT F.ID_PESSOA FROM FORNECEDOR F)

/*21*/
SELECT V.VALOR_TOTAL, V.DATA_VENDA, F.DESCRICAO, C.CPF AS CPF_COMPRADOR, P.NOME, P.TELEFONE, P.EMAIL
FROM VENDA V
RIGHT JOIN FORMA_PAGAMENTO F ON F.ID_FORMA_PAGAMENTO = V.ID_FORMA_PAGAMENTO
RIGHT JOIN PESSOA P ON P.ID_PESSOA = V.ID_PESSOA
RIGHT JOIN CLIENTE C ON C.ID_PESSOA = P.ID_PESSOA

/*22*/
SELECT v.*, p.*
FROM VENDA v
JOIN PRODUTO p ON ID_PRODUTO = ID_PRODUTO 
WHERE p.nome = 'Placa de Captura'

/*23*/
SELECT P.NOME,2025 - EXTRACT(YEAR FROM DATEADD(YEAR, 1, P.DATA_NASCIMENTO)) AS IDADE_2025
FROM PESSOA P
WHERE P.ID_PESSOA IN (SELECT F.ID_PESSOA FROM FORNECEDOR F) 
OR P.ID_PESSOA IN (SELECT C.ID_PESSOA FROM CLIENTE C)

/*24*/
SELECT l.nome, b.ID_BAIRRO ,
CASE WHEN p.id_pessoa IS NOT NULL THEN 'Pertence' ELSE 'Não pertence'
END AS pertence
FROM LOGRADOURO l
JOIN BAIRRO b ON l.id_bairro = b.id_bairro
LEFT JOIN PESSOA p ON l.id_logradouro = id_logradouro

/*25*/
SELECT * FROM PRODUTO
WHERE preco_unitario > (SELECT AVG(preco_unitario) FROM PRODUTO)

/*26*/
SELECT DISTINCT M.nome FROM CLIENTE c
INNER JOIN VENDA v ON c.id_cliente = id_cliente
INNER JOIN MUNICIPIO m ON M.ID_MUNICIPIO = M.ID_MUNICIPIO 
WHERE M.POPULACAO > 1000000

/*28*/
SELECT P.NOME,V.VALOR_TOTAL
FROM VENDA V
RIGHT JOIN PESSOA P ON P.ID_PESSOA = V.ID_PESSOA
WHERE V.VALOR_TOTAL > 500

/*29*/
SELECT P.NOME,E.NUMERO,E.COMPLEMENTO,L.NOME,B.NOME,B.CEP
FROM PESSOA P
RIGHT JOIN ENDERECO E ON E.ID_PESSOA = P.ID_PESSOA
RIGHT JOIN LOGRADOURO L ON L.ID_LOGRADOURO = E.ID_LOGRADOURO
RIGHT JOIN BAIRRO B ON B.ID_BAIRRO = L.ID_BAIRRO
WHERE E.NUMERO IS NOT NULL

/*30*/
SELECT PES.NOME AS FORNECEDOR,P.NOME AS PRODUTO,P.DESCRICAO,P.PRECO_UNITARIO,P.QUANTIDADE_ESTOQUE
FROM PRODUTO P
INNER JOIN FORNECEDOR F ON F.ID_FORNECEDOR = P.ID_FORNECEDOR
RIGHT JOIN PESSOA PES ON PES.ID_PESSOA = F.ID_PESSOA
WHERE PES.ID_PESSOA IN (SELECT F.ID_PESSOA FROM FORNECEDOR F)

/*31*/
SELECT * FROM PRODUTO P
ORDER BY P.QUANTIDADE_ESTOQUE DESC

/*32*/
SELECT * FROM VENDA V
ORDER BY V.VALOR_TOTAL ASC

/*33*/
SELECT * FROM PRODUTO P
WHERE P.QUANTIDADE_ESTOQUE < (SELECT AVG(P.QUANTIDADE_ESTOQUE) FROM PRODUTO P)

/*34*/
SELECT P.TELEFONE, P.NOME, P.EMAIL
FROM PESSOA P
WHERE P.TELEFONE IN (SELECT TELEFONE FROM PESSOA P
GROUP BY P.TELEFONE
HAVING COUNT(*) > 1)

/*35*/
UPDATE PRODUTO P
SET P.PRECO_UNITARIO = P.PRECO_UNITARIO *1.1
WHERE P.ID_FORNECEDOR IN (SELECT F.ID_FORNECEDOR FROM FORNECEDOR F
WHERE F.ID_PESSOA IN (SELECT P2.ID_PESSOA FROM PESSOA P2
WHERE P2.ID_PESSOA IN (SELECT E.ID_PESSOA FROM ENDERECO E
WHERE E.ID_MUNICIPIO IN (SELECT M.ID_MUNICIPIO FROM MUNICIPIO M
WHERE M.NOME = 'São Paulo'))))

/*36*/
SELECT * FROM VENDA V
WHERE V.ID_VENDA IN (SELECT D.ID_VENDA FROM DEBITOS D
WHERE D.SITUACAO_DEBITO = 'Negociado')
